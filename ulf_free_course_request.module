<?php
/**
 * @file
 * Code for the Ulf free course request feature.
 */

include_once 'ulf_free_course_request.features.inc';
include_once 'ulf_free_course_request.permissions.inc';
include_once 'ulf_free_course_request.backend.inc';
include_once 'ulf_free_course_request.actions.inc';
include_once 'ulf_free_course_request.mail.inc';
include_once 'ulf_free_course_request.form_alterations.inc';

/**
 * Implements hook_menu().
 */
function ulf_free_course_request_menu() {
  $items = array();

  $items['admin/config/system/free_course_request/requests'] = array(
    'title' => 'Financing requests',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );

  $items['admin/config/system/free_course_request/config'] = array(
    'title' => 'Config / Help texts',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ulf_free_course_request_form_backend'),
    'type' => MENU_LOCAL_TASK,
    'access arguments' => array('administer ulf free course request settings'),
    'file' => 'ulf_free_course_request.backend.inc',
    'file path' => drupal_get_path('module', 'ulf_free_course_request'),
  );

  return $items;
}

/**
 * Implements hook_preprocess_user_profile().
 */
function ulf_free_course_request_preprocess_user_profile(&$variables) {
  foreach ($variables['elements']['#account']->roles as $role) {
    $filter = '![^abcdefghijklmnopqrstuvwxyz0-9-_]+!s';
    $string_clean = preg_replace($filter, '-', drupal_strtolower($role));
    $variables['theme_hook_suggestions'][] =  'user_profile__' . $string_clean;
  }
}

/**
 * Implements hook_theme_registry_alter().
 */
function ulf_free_course_request_theme_registry_alter(&$theme_registry) {
  // Defined path to the current module.
  $module_path = drupal_get_path('module', 'ulf_free_course_request');
  // Find all .tpl.php files in this module's folder recursively.
  $template_file_objects = drupal_find_theme_templates($theme_registry, '.tpl.php', $module_path);
  // Iterate through all found template file objects.
  foreach ($template_file_objects as $key => $template_file_object) {
    // If the template has not already been overridden by a theme.
    if (!isset($theme_registry[$key]['theme path']) || !preg_match('#/themes/#', $theme_registry[$key]['theme path'])) {
      // Alter the theme path and template elements.
      $theme_registry[$key]['theme path'] = $module_path;
      $theme_registry[$key] = array_merge($theme_registry[$key], $template_file_object);
      $theme_registry[$key]['type'] = 'module';
    }
  }
}

/**
 * Change the entiyform after it has been inserted into db.
 * Also send mails.
 *
 * @param $entity
 * @param $entity_type
 */
function ulf_free_course_request_entity_postinsert($entity, $entity_type) {
  if ($entity_type == 'entityform') {
    if ($entity->type == 'free_course_request') {
      $entity->uid = $entity->field_rfc_school['und'][0]['target_id'];
      entityform_save($entity);

      $wrapper = entity_metadata_wrapper($entity_type, $entity);
      _rfc_notify($wrapper, 'on_submit_user');
      _rfc_notify($wrapper, 'on_submit_admin');
    }
  }
}


/**
 * Act after entiyform has been changed.
 *
 * @param $entity
 * @param $entity_type
 */
function ulf_free_course_request_entity_postupdate($entity, $entity_type) {
  // Ensure we are submitting an entityform from form view.
  if ($entity_type == 'entityform' && arg(2) == 'edit') {
    if ($entity->type == 'free_course_request') {
      if ($entity->field_rfc_send_mail[LANGUAGE_NONE][0]['value'] == TRUE) {
        $wrapper = entity_metadata_wrapper($entity_type, $entity);
        if ($entity->field_rfc_status[LANGUAGE_NONE][0]['value'] == 'accepted') {
          _rfc_notify($wrapper, 'on_change_accepted');
        }
        if ($entity->field_rfc_status[LANGUAGE_NONE][0]['value'] == 'refused') {
          _rfc_notify($wrapper, 'on_change_refused');
        }
      }
      drupal_goto('admin/config/system/free_course_request');
    }
  }
}
